{
  "name": "btn-04",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { motion, useAnimation } from \"motion/react\";\nimport { Zap } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface Btn04Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    onPowerUp?: () => void;\n    chargeDuration?: number;\n}\n\nexport default function Btn04({\n    className,\n    onPowerUp,\n    chargeDuration = 2000,\n    ...props\n}: Btn04Props) {\n    const [isCharging, setIsCharging] = useState(false);\n    const particleControls = useAnimation();\n    const chargeControls = useAnimation();\n\n    async function handleStart() {\n        setIsCharging(true);\n        chargeControls.set({ height: \"100%\", y: \"100%\" });\n        await chargeControls.start({\n            y: \"0%\",\n            transition: {\n                duration: chargeDuration / 1000,\n                ease: \"easeOut\",\n            },\n        });\n\n        await particleControls.start({\n            scale: [1, 1.5],\n            opacity: [1, 0],\n            transition: { duration: 0.3 },\n        });\n\n        onPowerUp?.();\n    }\n\n    function handleEnd() {\n        setIsCharging(false);\n        chargeControls.stop();\n        chargeControls.start({\n            y: \"100%\",\n            transition: { duration: 0.2 },\n        });\n    }\n\n    return (\n        <Button\n            className={cn(\n                \"min-w-[120px] sm:min-w-40 relative overflow-hidden\",\n                \"bg-indigo-100 dark:bg-indigo-900\",\n                \"hover:bg-indigo-200 dark:hover:bg-indigo-800\",\n                \"text-indigo-900 dark:text-indigo-300\",\n                \"border border-indigo-300 dark:border-indigo-700\",\n                \"transition-colors duration-300\",\n                \"touch-none\",\n                className\n            )}\n            onMouseDown={handleStart}\n            onMouseUp={handleEnd}\n            onMouseLeave={handleEnd}\n            onTouchStart={handleStart}\n            onTouchEnd={handleEnd}\n            onTouchCancel={handleEnd}\n            {...props}\n        >\n            <motion.div\n                initial={{ height: \"100%\", y: \"100%\" }}\n                animate={chargeControls}\n                className={cn(\n                    \"absolute left-0 bottom-0 w-full\",\n                    \"bg-linear-to-t from-indigo-400 to-indigo-300\",\n                    \"dark:from-indigo-500 dark:to-indigo-400\",\n                    \"opacity-50\"\n                )}\n            />\n            <motion.div\n                initial={{ scale: 0, opacity: 0 }}\n                animate={particleControls}\n                className={cn(\n                    \"absolute inset-0\",\n                    \"bg-indigo-200 dark:bg-indigo-400\",\n                    \"rounded-full\"\n                )}\n            />\n            <span className=\"relative z-10 w-full flex items-center justify-center gap-2\">\n                <Zap\n                    className={cn(\n                        \"w-4 h-4 transition-transform\",\n                        isCharging && \"animate-bounce\"\n                    )}\n                />\n                {!isCharging ? \"Power Up!\" : \"Charging...\"}\n            </span>\n        </Button>\n    );\n}\n",
      "path": "/components/ruixenui/button/btn-04.tsx",
      "target": "/components/ruixenui/btn-04.tsx"
    }
  ]
}