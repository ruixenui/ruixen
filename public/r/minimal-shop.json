{
  "name": "minimal-shop",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "input",
    "select",
    "textarea"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { useState } from \"react\";\nimport { ProductGrid } from \"./product-grid\";\nimport { CartDrawer } from \"./cart-drawer\";\nimport { ProductModal } from \"./product-modal\";\nimport { TopBar } from \"./top-bar\";\nimport { type Product, type CartItem, products } from \"./data\";\n\nexport default function MinimalShop() {\n    const [cart, setCart] = useState<CartItem[]>([]);\n    const [selectedProduct, setSelectedProduct] = useState<Product | null>(\n        null\n    );\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const addToCart = (product: Product, quantity: number = 1) => {\n        setCart((prev) => {\n            const exists = prev.find((item) => item.id === product.id);\n            if (exists) {\n                return prev.map((item) =>\n                    item.id === product.id\n                        ? { ...item, quantity: item.quantity + quantity }\n                        : item\n                );\n            }\n            return [...prev, { ...product, quantity }];\n        });\n    };\n\n    const removeFromCart = (productId: string) => {\n        setCart((prev) => prev.filter((item) => item.id !== productId));\n    };\n\n    const filteredProducts = products.filter((product) =>\n        product.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"h-screen bg-zinc-50 dark:bg-zinc-950\">\n            <TopBar\n                cartItemCount={cart.length}\n                onCartClick={() => setIsCartOpen(true)}\n                onSearch={setSearchQuery}\n            />\n\n            <div className=\"mx-auto px-2 pt-12 pb-16\">\n                <ProductGrid\n                    products={filteredProducts}\n                    onProductSelect={setSelectedProduct}\n                />\n            </div>\n\n            <AnimatePresence>\n                {selectedProduct && (\n                    <ProductModal\n                        product={selectedProduct}\n                        onClose={() => setSelectedProduct(null)}\n                        onAddToCart={(product) => {\n                            addToCart(product);\n                            setSelectedProduct(null);\n                            setIsCartOpen(true);\n                        }}\n                    />\n                )}\n            </AnimatePresence>\n\n            <AnimatePresence>\n                {isCartOpen && (\n                    <CartDrawer\n                        cart={cart}\n                        onClose={() => setIsCartOpen(false)}\n                        onRemoveFromCart={removeFromCart}\n                    />\n                )}\n            </AnimatePresence>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/minimal-shop/minimal-shop.tsx",
      "target": "/components/ruixenui/minimal-shop.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Search, ShoppingBag, X } from \"lucide-react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"motion/react\";\nimport Link from \"next/link\";\n\ninterface TopBarProps {\n    cartItemCount: number;\n    onCartClick: () => void;\n    onSearch: (query: string) => void;\n}\n\nconst categories = [\n    \"All\",\n    \"Lighting\",\n    \"Kitchenware\",\n    \"Home Decor\",\n    \"Plants\",\n    \"Office\",\n    \"Textiles\",\n];\n\nexport function TopBar({ cartItemCount, onCartClick, onSearch }: TopBarProps) {\n    const [isSearchOpen, setIsSearchOpen] = useState(false);\n    const [selectedCategory, setSelectedCategory] = useState(\"All\");\n    const [isScrolled, setIsScrolled] = useState(false);\n    const searchInputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            setIsScrolled(window.scrollY > 10);\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, []);\n\n    const handleKeyPress = (e: React.KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n            setIsSearchOpen(false);\n            searchInputRef.current?.blur();\n        }\n    };\n\n    return (\n        <div\n            className={`sticky top-0 z-40 transition-all duration-200 ${\n                isScrolled\n                    ? \"bg-white/90 dark:bg-zinc-900/90 shadow-sm\"\n                    : \"bg-white/80 dark:bg-zinc-900/80\"\n            } backdrop-blur-sm border-b border-zinc-200 dark:border-zinc-800`}\n        >\n            <div className=\"flex items-center justify-between px-3 h-12\">\n                <Link\n                    href=\"https://ruixenui.com/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-sm font-medium shrink-0\"\n                >\n                    Shop\n                </Link>\n\n                <div className=\"flex-1 px-8 overflow-x-auto flex items-center justify-center gap-6 scrollbar-none\">\n                    {categories.map((category) => (\n                        <button\n                            type=\"button\"\n                            key={category}\n                            className={`whitespace-nowrap transition-colors ${\n                                selectedCategory === category\n                                    ? \"text-zinc-900 dark:text-white text-sm font-medium\"\n                                    : \"text-zinc-500 dark:text-zinc-400 text-sm hover:text-zinc-900 dark:hover:text-white\"\n                            }`}\n                            onClick={() => setSelectedCategory(category)}\n                        >\n                            {category}\n                        </button>\n                    ))}\n                </div>\n\n                <div className=\"flex items-center gap-1.5 shrink-0\">\n                    <motion.div\n                        className=\"relative overflow-hidden p-1\"\n                        initial={false}\n                        animate={{ width: isSearchOpen ? \"auto\" : 0 }}\n                    >\n                        <input\n                            ref={searchInputRef}\n                            type=\"text\"\n                            placeholder=\"Search products...\"\n                            className={`w-48 sm:w-56 bg-zinc-100 dark:bg-zinc-800 rounded-md text-sm px-3 py-1.5 \n                                focus:outline-none focus:ring-1 focus:ring-zinc-300 dark:focus:ring-zinc-700\n                                transition-all duration-200 ${\n                                    isSearchOpen ? \"opacity-100\" : \"opacity-0\"\n                                }`}\n                            onChange={(e) => onSearch(e.target.value)}\n                            onKeyDown={handleKeyPress}\n                        />\n                        {isSearchOpen && (\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    setIsSearchOpen(false);\n                                    onSearch(\"\");\n                                }}\n                                className=\"absolute right-2 top-1/2 -translate-y-1/2 p-0.5 hover:bg-zinc-200 \n                                    dark:hover:bg-zinc-700 rounded-full\"\n                            >\n                                <X className=\"w-4 h-4\" />\n                            </button>\n                        )}\n                    </motion.div>\n                    <button\n                        type=\"button\"\n                        onClick={() => setIsSearchOpen(!isSearchOpen)}\n                        className={`p-1.5 rounded-md transition-colors ${\n                            isSearchOpen\n                                ? \"bg-zinc-100 dark:bg-zinc-800\"\n                                : \"hover:bg-zinc-100 dark:hover:bg-zinc-800\"\n                        } z-10`}\n                    >\n                        <Search className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={onCartClick}\n                        className=\"p-1.5 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-md relative\"\n                    >\n                        <ShoppingBag className=\"w-4 h-4\" />\n                        {cartItemCount > 0 && (\n                            <motion.span\n                                initial={{ scale: 0.5 }}\n                                animate={{ scale: 1 }}\n                                className=\"absolute -top-1 -right-1 bg-zinc-900 dark:bg-white \n                                    text-white dark:text-zinc-900 text-xs font-medium w-4 h-4 \n                                    flex items-center justify-center rounded-full\"\n                            >\n                                {cartItemCount}\n                            </motion.span>\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/minimal-shop/top-bar.tsx",
      "target": "/components/ruixenui/top-bar.tsx"
    },
    {
      "type": "registry:component",
      "content": "import { motion } from \"motion/react\";\nimport { type Product } from \"./data\";\n\ninterface ProductGridProps {\n    products: Product[];\n    onProductSelect: (product: Product) => void;\n}\n\nexport function ProductGrid({ products, onProductSelect }: ProductGridProps) {\n    return (\n        <div className=\"grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-6 gap-2\">\n            {products.map((product) => (\n                <motion.div\n                    key={product.id}\n                    layoutId={`product-${product.id}`}\n                    onClick={() => onProductSelect(product)}\n                    className=\"group cursor-pointer\"\n                    whileHover={{ y: -1 }}\n                    transition={{ duration: 0.2 }}\n                >\n                    <div className=\"aspect-[4/5] bg-white dark:bg-zinc-900 rounded-md overflow-hidden\">\n                        <img\n                            src={product.image}\n                            alt={product.name}\n                            className=\"w-full h-full object-cover object-center group-hover:scale-105 transition-transform duration-300\"\n                        />\n                    </div>\n                    <div className=\"mt-1.5 space-y-0.5\">\n                        <h3 className=\"text-xs font-medium truncate\">\n                            {product.name}\n                        </h3>\n                        <div className=\"flex justify-between items-center\">\n                            <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                                ${product.price}\n                            </p>\n                            <p className=\"text-[10px] text-zinc-400 dark:text-zinc-500\">\n                                {product.category}\n                            </p>\n                        </div>\n                    </div>\n                </motion.div>\n            ))}\n        </div>\n    );\n} ",
      "path": "/components/ruixenui/blocks/minimal-shop/product-grid.tsx",
      "target": "/components/ruixenui/product-grid.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { motion } from \"motion/react\";\nimport { X, Plus, Minus } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { type Product } from \"./data\";\n\ninterface ProductModalProps {\n    product: Product;\n    onClose: () => void;\n    onAddToCart: (product: Product) => void;\n}\n\nexport function ProductModal({\n    product,\n    onClose,\n    onAddToCart,\n}: ProductModalProps) {\n    const [quantity, setQuantity] = useState(1);\n\n    return (\n        <>\n            <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 0.5 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 bg-black\"\n                onClick={onClose}\n            />\n            <motion.div\n                layoutId={`product-${product.id}`}\n                className=\"fixed inset-x-4 bottom-0 md:inset-[25%] z-50 bg-white dark:bg-zinc-900 rounded-t-xl md:rounded-xl overflow-hidden max-h-[80vh] md:max-h-[500px]\"\n            >\n                <div className=\"h-full md:flex\">\n                    <div className=\"relative md:w-2/5\">\n                        <img\n                            src={product.image}\n                            alt={product.name}\n                            className=\"w-full h-[200px] md:h-full object-cover\"\n                        />\n                        <button\n                            onClick={onClose}\n                            className=\"absolute top-2 right-2 p-1.5 bg-white/80 dark:bg-black/50 backdrop-blur-sm rounded-full\"\n                        >\n                            <X className=\"w-4 h-4\" />\n                        </button>\n                    </div>\n\n                    <div className=\"p-3 md:w-3/5 flex flex-col\">\n                        <div className=\"flex-1\">\n                            <div className=\"flex justify-between items-start mb-2\">\n                                <div>\n                                    <h2 className=\"text-sm font-medium\">{product.name}</h2>\n                                    <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                                        {product.category}\n                                    </p>\n                                </div>\n                                <p className=\"text-sm font-medium\">${product.price}</p>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <p className=\"text-xs text-zinc-600 dark:text-zinc-300\">\n                                    {product.description}\n                                </p>\n                                <div className=\"text-xs space-y-1\">\n                                    <p className=\"text-zinc-500\">SKU: {product.id}</p>\n                                    <p className=\"text-zinc-500\">Stock: Available</p>\n                                </div>\n                            </div>\n                        </div>\n                        <button\n                            onClick={() => onAddToCart(product)}\n                            className=\"w-full mt-3 py-2 bg-zinc-900 dark:bg-white text-white dark:text-zinc-900 text-xs font-medium rounded-md hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors\"\n                        >\n                            Add to Cart\n                        </button>\n                    </div>\n                </div>\n            </motion.div>\n        </>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/minimal-shop/product-modal.tsx",
      "target": "/components/ruixenui/product-modal.tsx"
    },
    {
      "type": "registry:component",
      "content": "import { motion } from \"motion/react\";\nimport { X } from \"lucide-react\";\nimport { type CartItem } from \"./data\";\n\ninterface CartDrawerProps {\n    cart: CartItem[];\n    onClose: () => void;\n    onRemoveFromCart: (productId: string) => void;\n}\n\nexport function CartDrawer({\n    cart,\n    onClose,\n    onRemoveFromCart,\n}: CartDrawerProps) {\n    const total = cart.reduce(\n        (sum, item) => sum + item.price * item.quantity,\n        0\n    );\n\n    return (\n        <>\n            <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 0.5 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 bg-black\"\n                onClick={onClose}\n            />\n            <motion.div\n                initial={{ x: \"100%\" }}\n                animate={{ x: 0 }}\n                exit={{ x: \"100%\" }}\n                className=\"fixed right-0 z-50 top-0 h-full w-full sm:w-[400px] bg-white dark:bg-zinc-900 shadow-xl\"\n            >\n                <div className=\"flex flex-col h-full\">\n                    <div className=\"flex items-center justify-between p-4 border-b border-zinc-200 dark:border-zinc-800\">\n                        <h2 className=\"text-lg font-medium\">Shopping Cart</h2>\n                        <button\n                            onClick={onClose}\n                            className=\"p-2 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-full\"\n                        >\n                            <X className=\"w-5 h-5\" />\n                        </button>\n                    </div>\n\n                    <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                        {cart.map((item) => (\n                            <div\n                                key={item.id}\n                                className=\"flex gap-4 p-3 bg-zinc-50 dark:bg-zinc-800/50 rounded-lg\"\n                            >\n                                <img\n                                    src={item.image}\n                                    alt={item.name}\n                                    className=\"w-24 h-24 object-cover rounded-md\"\n                                />\n                                <div className=\"flex-1 min-w-0\">\n                                    <div className=\"flex justify-between items-start\">\n                                        <h3 className=\"text-base font-medium truncate\">\n                                            {item.name}\n                                        </h3>\n                                        <button\n                                            onClick={() =>\n                                                onRemoveFromCart(item.id)\n                                            }\n                                            className=\"p-1.5 hover:bg-zinc-200 dark:hover:bg-zinc-700 rounded-full ml-2\"\n                                        >\n                                            <X className=\"w-4 h-4\" />\n                                        </button>\n                                    </div>\n                                    <p className=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">\n                                        Qty: {item.quantity}\n                                    </p>\n                                    <p className=\"text-base font-medium mt-1\">\n                                        ${item.price * item.quantity}\n                                    </p>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"p-4 border-t border-zinc-200 dark:border-zinc-800\">\n                        <div className=\"flex justify-between mb-4\">\n                            <span className=\"text-base\">Total</span>\n                            <span className=\"text-base font-medium\">${total}</span>\n                        </div>\n                        <button className=\"w-full py-3 bg-zinc-900 dark:bg-white text-white dark:text-zinc-900 text-base font-medium rounded-lg hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors\">\n                            Checkout\n                        </button>\n                    </div>\n                </div>\n            </motion.div>\n        </>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/minimal-shop/cart-drawer.tsx",
      "target": "/components/ruixenui/cart-drawer.tsx"
    },
    {
      "type": "registry:component",
      "content": "export interface Product {\n    id: string;\n    name: string;\n    description: string;\n    price: number;\n    image: string;\n    category: string;\n}\n\nexport interface CartItem extends Product {\n    quantity: number;\n}\n\nexport const products: Product[] = [\n    {\n        id: \"p1\",\n        name: \"Minimal Desk Lamp\",\n        description:\n            \"A sleek and modern desk lamp with adjustable brightness and color temperature.\",\n        price: 89,\n        image: \"https://images.unsplash.com/photo-1507473885765-e6ed057f782c?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Lighting\",\n    },\n    {\n        id: \"p2\",\n        name: \"Ceramic Coffee Set\",\n        description:\n            \"Handcrafted ceramic coffee set including 4 cups and a matching pour-over dripper.\",\n        price: 65,\n        image: \"https://images.unsplash.com/photo-1517256064527-09c73fc73e38?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Kitchenware\",\n    },\n    {\n        id: \"p3\",\n        name: \"Linen Throw Pillow\",\n        description: \"Soft linen throw pillow with minimalist pattern design.\",\n        price: 45,\n        image: \"https://images.unsplash.com/photo-1579656381226-5fc0f0100c3b?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Home Decor\",\n    },\n    {\n        id: \"p4\",\n        name: \"Wooden Wall Clock\",\n        description: \"Modern wooden wall clock with silent movement.\",\n        price: 79,\n        image: \"https://images.unsplash.com/photo-1563861826100-9cb868fdbe1c?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Home Decor\",\n    },\n    {\n        id: \"p5\",\n        name: \"Concrete Planter\",\n        description: \"Minimalist concrete planter perfect for succulents.\",\n        price: 34,\n        image: \"https://images.unsplash.com/photo-1485955900006-10f4d324d411?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Plants\",\n    },\n    {\n        id: \"p6\",\n        name: \"Glass Vase Set\",\n        description: \"Set of 3 minimalist glass vases in varying sizes.\",\n        price: 55,\n        image: \"https://images.unsplash.com/photo-1581783898377-1c85bf937427?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Home Decor\",\n    },\n    {\n        id: \"p7\",\n        name: \"Bamboo Organizer\",\n        description: \"Desk organizer made from sustainable bamboo.\",\n        price: 42,\n        image: \"https://images.unsplash.com/photo-1591129841117-3adfd313e34f?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Office\",\n    },\n    {\n        id: \"p9\",\n        name: \"Marble Coasters\",\n        description: \"Set of 4 marble coasters with cork backing.\",\n        price: 38,\n        image: \"https://images.unsplash.com/photo-1616594039964-ae9021a400a0?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Kitchenware\",\n    },\n    {\n        id: \"p10\",\n        name: \"Brass Bookends\",\n        description: \"Modern geometric brass bookends, set of 2.\",\n        price: 68,\n        image: \"https://images.unsplash.com/photo-1544457070-4cd773b4d71e?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Office\",\n    },\n    {\n        id: \"p11\",\n        name: \"Ceramic Plant Pot\",\n        description: \"Handmade ceramic plant pot with drainage hole.\",\n        price: 48,\n        image: \"https://images.unsplash.com/photo-1485955900006-10f4d324d411?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Plants\",\n    },\n    {\n        id: \"p12\",\n        name: \"Wall Mirror\",\n        description: \"Round wall mirror with minimal metal frame.\",\n        price: 120,\n        image: \"https://images.unsplash.com/photo-1618220179428-22790b461013?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3\",\n        category: \"Home Decor\",\n    },\n];\n",
      "path": "/components/ruixenui/blocks/minimal-shop/data.ts",
      "target": "/components/ruixenui/data.ts"
    },
    {
      "type": "registry:component",
      "content": "import { Search, ShoppingBag } from \"lucide-react\";\n\nimport { Menu } from \"lucide-react\";\n\ninterface HeaderProps {\n    cartCount: number;\n    onCartOpen: () => void;\n    searchQuery: string;\n    onSearchChange: (query: string) => void;\n}\n\nexport function Header({\n    cartCount,\n    onCartOpen,\n    searchQuery,\n    onSearchChange,\n}: HeaderProps) {\n    return (\n        <header className=\"fixed w-full top-0 z-40 bg-white/80 dark:bg-zinc-950/80 backdrop-blur-xl border-b border-zinc-200 dark:border-zinc-800\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"h-16 flex items-center justify-between gap-4\">\n                    <div className=\"flex items-center gap-4\">\n                        <button\n                            type=\"button\"\n                            className=\"p-2 hover:bg-zinc-100 dark:hover:bg-zinc-900 rounded-full\"\n                        >\n                            <Menu className=\"w-4 h-4\" />\n                        </button>\n                        <span className=\"text-sm font-medium\">Store</span>\n                    </div>\n\n                    <div className=\"flex-1 max-w-md\">\n                        <div className=\"relative\">\n                            <input\n                                type=\"text\"\n                                value={searchQuery}\n                                onChange={(e) => onSearchChange(e.target.value)}\n                                placeholder=\"Search products...\"\n                                className=\"w-full h-9 pl-9 pr-4 text-sm bg-zinc-100 dark:bg-zinc-900 rounded-full focus:outline-none focus:ring-2 focus:ring-zinc-300 dark:focus:ring-zinc-700\"\n                            />\n                            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400\" />\n                        </div>\n                    </div>\n\n                    <button\n                        type=\"button\"\n                        onClick={onCartOpen}\n                        className=\"relative p-2 hover:bg-zinc-100 dark:hover:bg-zinc-900 rounded-full\"\n                    >\n                        <ShoppingBag className=\"w-4 h-4\" />\n                        {cartCount > 0 && (\n                            <span className=\"absolute -top-1 -right-1 w-4 h-4 text-[10px] font-medium flex items-center justify-center bg-zinc-900 dark:bg-white text-white dark:text-zinc-900 rounded-full\">\n                                {cartCount}\n                            </span>\n                        )}\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/minimal-shop/header.tsx",
      "target": "/components/ruixenui/header.tsx"
    }
  ]
}