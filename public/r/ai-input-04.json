{
  "name": "ai-input-04",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Globe, Paperclip, Send } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\nimport { useAutoResizeTextarea } from \"@/hooks/use-auto-resize-textarea\";\n\nexport default function AIInput_04() {\n    const [value, setValue] = useState(\"\");\n    const { textareaRef, adjustHeight } = useAutoResizeTextarea({\n        minHeight: 52,\n        maxHeight: 200,\n    });\n    const [showSearch, setShowSearch] = useState(true);\n\n    const handleSubmit = () => {\n        setValue(\"\");\n        adjustHeight(true);\n    };\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"relative max-w-xl w-full mx-auto\">\n                <div className=\"relative flex flex-col\">\n                    <div className=\"overflow-y-auto max-h-[200px]\">\n                        <Textarea\n                            id=\"ai-input-04\"\n                            value={value}\n                            placeholder=\"Search the web...\"\n                            className=\"w-full rounded-xl rounded-b-none px-4 py-3 bg-black/5 dark:bg-white/5 border-none dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70 resize-none focus-visible:ring-0 leading-[1.2]\"\n                            ref={textareaRef}\n                            onKeyDown={(e) => {\n                                if (e.key === \"Enter\" && !e.shiftKey) {\n                                    e.preventDefault();\n                                    handleSubmit();\n                                }\n                            }}\n                            onChange={(e) => {\n                                setValue(e.target.value);\n                                adjustHeight();\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"h-12 bg-black/5 dark:bg-white/5 rounded-b-xl\">\n                        <div className=\"absolute left-3 bottom-3 flex items-center gap-2\">\n                            <label className=\"cursor-pointer rounded-lg p-2 bg-black/5 dark:bg-white/5\">\n                                <input type=\"file\" className=\"hidden\" />\n                                <Paperclip className=\"w-4 h-4 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white transition-colors\" />\n                            </label>\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    setShowSearch(!showSearch);\n                                }}\n                                className={cn(\n                                    \"rounded-full transition-all flex items-center gap-2 px-1.5 py-1 border h-8 cursor-pointer\",\n                                    showSearch\n                                        ? \"bg-sky-500/15 border-sky-400 text-sky-500\"\n                                        : \"bg-black/5 dark:bg-white/5 border-transparent text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white \"\n                                )}\n                            >\n                                <div className=\"w-4 h-4 flex items-center justify-center shrink-0\">\n                                    <motion.div\n                                        animate={{\n                                            rotate: showSearch ? 180 : 0,\n                                            scale: showSearch ? 1.1 : 1,\n                                        }}\n                                        whileHover={{\n                                            rotate: showSearch ? 180 : 15,\n                                            scale: 1.1,\n                                            transition: {\n                                                type: \"spring\",\n                                                stiffness: 300,\n                                                damping: 10,\n                                            },\n                                        }}\n                                        transition={{\n                                            type: \"spring\",\n                                            stiffness: 260,\n                                            damping: 25,\n                                        }}\n                                    >\n                                        <Globe\n                                            className={cn(\n                                                \"w-4 h-4\",\n                                                showSearch\n                                                    ? \"text-sky-500\"\n                                                    : \"text-inherit\"\n                                            )}\n                                        />\n                                    </motion.div>\n                                </div>\n                                <AnimatePresence>\n                                    {showSearch && (\n                                        <motion.span\n                                            initial={{ width: 0, opacity: 0 }}\n                                            animate={{\n                                                width: \"auto\",\n                                                opacity: 1,\n                                            }}\n                                            exit={{ width: 0, opacity: 0 }}\n                                            transition={{ duration: 0.2 }}\n                                            className=\"text-sm overflow-hidden whitespace-nowrap text-sky-500 shrink-0\"\n                                        >\n                                            Search\n                                        </motion.span>\n                                    )}\n                                </AnimatePresence>\n                            </button>\n                        </div>\n                        <div className=\"absolute right-3 bottom-3\">\n                            <button\n                                type=\"button\"\n                                onClick={handleSubmit}\n                                className={cn(\n                                    \"rounded-lg p-2 transition-colors\",\n                                    value\n                                        ? \"bg-sky-500/15 text-sky-500\"\n                                        : \"bg-black/5 dark:bg-white/5 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white cursor-pointer\"\n                                )}\n                            >\n                                <Send className=\"w-4 h-4\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/ai-input/ai-input-04.tsx",
      "target": "/components/ruixenui/ai-input-04.tsx"
    },
    {
      "type": "registry:hook",
      "content": "import { useEffect, useRef, useCallback } from \"react\";\n\ninterface UseAutoResizeTextareaProps {\n    minHeight: number;\n    maxHeight?: number;\n}\n\nexport function useAutoResizeTextarea({\n    minHeight,\n    maxHeight,\n}: UseAutoResizeTextareaProps) {\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const adjustHeight = useCallback(\n        (reset?: boolean) => {\n            const textarea = textareaRef.current;\n            if (!textarea) return;\n\n            if (reset) {\n                textarea.style.height = `${minHeight}px`;\n                return;\n            }\n\n            // Temporarily shrink to get the right scrollHeight\n            textarea.style.height = `${minHeight}px`;\n\n            // Calculate new height\n            const newHeight = Math.max(\n                minHeight,\n                Math.min(\n                    textarea.scrollHeight,\n                    maxHeight ?? Number.POSITIVE_INFINITY\n                )\n            );\n\n            textarea.style.height = `${newHeight}px`;\n        },\n        [minHeight, maxHeight]\n    );\n\n    useEffect(() => {\n        // Set initial height\n        const textarea = textareaRef.current;\n        if (textarea) {\n            textarea.style.height = `${minHeight}px`;\n        }\n    }, [minHeight]);\n\n    // Adjust height on window resize\n    useEffect(() => {\n        const handleResize = () => adjustHeight();\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, [adjustHeight]);\n\n    return { textareaRef, adjustHeight };\n}\n",
      "path": "/hooks/use-auto-resize-textarea.ts",
      "target": "/hooks/use-auto-resize-textarea.ts"
    }
  ]
}