{
  "name": "auth-basic",
  "type": "registry:block",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "input",
    "separator"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "import {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport Image from \"next/image\";\nimport { AuthForm } from \"./auth-form\";\nimport { SocialLogin } from \"./social-login\";\n\nexport default function AuthBasic() {\n    return (\n        <div className=\"flex min-h-screen items-center justify-center p-4 bg-white dark:bg-black\">\n            <div className=\"w-full max-w-[450px]\">\n                <div className=\"w-full h-48 relative mb-4\">\n                    <Image\n                        src=\"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/to-the-moon-u5UJD9sRK8WkmaTY8HdEsNKjAQ9bjN.svg\"\n                        alt=\"To the moon illustration\"\n                        fill\n                        className=\"object-cover\"\n                    />\n                </div>\n                <Card className=\"w-full border-0 shadow-lg\">\n                    <CardHeader className=\"space-y-2\">\n                        <CardTitle className=\"text-2xl font-semibold tracking-tight text-black dark:text-white\">\n                            Welcome back\n                        </CardTitle>\n                        <CardDescription className=\"text-neutral-600 dark:text-neutral-400\">\n                            Enter your credentials to access your account\n                        </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                        <AuthForm />\n                        <SocialLogin />\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/auth-basic/auth-basic.tsx",
      "target": "/components/ruixenui/auth-basic.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Loader2, LockIcon } from \"lucide-react\";\n\nexport function AuthForm() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function handleSubmit(e: React.FormEvent) {\n        e.preventDefault();\n        setIsLoading(true);\n\n        const formData = new FormData(e.target as HTMLFormElement);\n        const email = formData.get(\"email\") as string;\n        const password = formData.get(\"password\") as string;\n\n        try {\n            /**\n             * To update with your actual authentication logic\n             */\n            await new Promise((resolve) => setTimeout(resolve, 2000));\n            console.log(\"Signing in with:\", email, password);\n        } catch (error) {\n            console.error(\"Authentication error:\", error);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"space-y-4\" noValidate>\n            <div className=\"space-y-2\">\n                <label\n                    htmlFor=\"email\"\n                    className=\"text-sm font-medium text-black dark:text-white\"\n                >\n                    Email\n                </label>\n                <div className=\"relative\">\n                    <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 flex items-center justify-center w-4 h-4\">\n                        @\n                    </span>\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"name@example.com\"\n                        required\n                        disabled={isLoading}\n                        className=\"pl-10 h-12 bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-1 focus-visible:ring-ring\"\n                        autoComplete=\"email\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-black dark:text-white\">\n                    Password\n                </label>\n                <div className=\"relative\">\n                    <LockIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500\" />\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter your password\"\n                        required\n                        disabled={isLoading}\n                        className=\"pl-10 h-12 bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-1 focus-visible:ring-ring\"\n                    />\n                </div>\n            </div>\n\n            <Button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full h-12 text-base font-medium bg-black text-white hover:bg-neutral-800 dark:bg-white dark:text-black dark:hover:bg-neutral-200 transition-colors\"\n            >\n                {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                {isLoading ? \"Signing in...\" : \"Sign in\"}\n            </Button>\n        </form>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/auth-basic/auth-form.tsx",
      "target": "/components/ruixenui/auth-form.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Loader2 } from \"lucide-react\";\n\nexport function SocialLogin() {\n    const [isGoogleLoading, setIsGoogleLoading] = useState(false);\n\n    async function handleGoogleSignIn() {\n        setIsGoogleLoading(true);\n        try {\n            /**\n             * To update with your actual authentication logic\n             */\n            await new Promise((resolve) => setTimeout(resolve, 1500));\n            console.log(\"Signing in with Google\");\n        } catch (error) {\n            console.error(\"Google sign-in error:\", error);\n        } finally {\n            setIsGoogleLoading(false);\n        }\n    }\n\n    function GoogleIcon() {\n        return (\n            <svg\n                className=\"mr-2 h-4 w-4\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fab\"\n                data-icon=\"google\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 488 512\"\n            >\n                <path\n                    fill=\"currentColor\"\n                    d=\"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"\n                ></path>\n            </svg>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                    <Separator className=\"w-full border-neutral-200 dark:border-neutral-800\" />\n                </div>\n                <div className=\"relative flex justify-center text-xs uppercase\">\n                    <span className=\"bg-white dark:bg-black px-2 text-neutral-600 dark:text-neutral-400\">\n                        Or continue with\n                    </span>\n                </div>\n            </div>\n\n            <Button\n                variant=\"outline\"\n                onClick={handleGoogleSignIn}\n                disabled={isGoogleLoading}\n                className=\"w-full h-12 font-medium border border-neutral-200 dark:border-neutral-800 hover:bg-neutral-50 dark:bg-black dark:hover:bg-neutral-900 transition-colors\"\n            >\n                {isGoogleLoading ? (\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                ) : (\n                    <GoogleIcon />\n                )}\n                {isGoogleLoading ? \"Connecting...\" : \"Sign in with Google\"}\n            </Button>\n        </>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/auth-basic/social-login.tsx",
      "target": "/components/ruixenui/social-login.tsx"
    }
  ]
}