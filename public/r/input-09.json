{
  "name": "input-09",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "popover"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { AnimatePresence, motion } from \"motion/react\";\nimport Image from \"next/image\";\nimport { useState } from \"react\";\n\nconst MAX_TEAM_SIZE = 4;\n\nconst animations = {\n    container: {\n        initial: { opacity: 0, y: 20 },\n        animate: { opacity: 1, y: 0 },\n        exit: { opacity: 0, y: -20 },\n    },\n    avatar: {\n        initial: { opacity: 0, scale: 0.8 },\n        animate: { opacity: 1, scale: 1, transition: { duration: 0.3 } },\n        exit: { opacity: 0, scale: 0.8, transition: { duration: 0.15 } },\n    },\n    vibration: {\n        initial: { x: 0 },\n        vibrate: { x: [-5, 5, -5, 5, 0], transition: { duration: 0.3 } },\n    },\n} as const;\n\nconst avatarUrls = [\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-01-n0x8HFv8EUetf9z6ht0wScJKoTHqf8.png\",\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-02-albo9B0tWOSLXCVZh9rX9KFxXIVWMr.png\",\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-03-JateJIUhtd3PXynaMG9TDWQ55j5AVP.png\",\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-04-uuYHWIRvVPi01gEt6NwnGyjqLeeZhz.png\",\n] as const;\n\nexport default function Input09() {\n    const [peopleCount, setPeopleCount] = useState(1);\n    const [isVibrating, setIsVibrating] = useState(false);\n\n    function handleIncrement(e: React.MouseEvent) {\n        e.preventDefault();\n        if (peopleCount < MAX_TEAM_SIZE) setPeopleCount(peopleCount + 1);\n        else triggerVibration();\n    }\n\n    function handleDecrement(e: React.MouseEvent) {\n        e.preventDefault();\n        if (peopleCount > 1) setPeopleCount(peopleCount - 1);\n        else triggerVibration();\n    }\n\n    function triggerVibration() {\n        setIsVibrating(true);\n        setTimeout(() => setIsVibrating(false), 300);\n    }\n\n    function renderAvatars() {\n        return Array.from({ length: peopleCount }, (_, i) => (\n            <motion.div\n                key={i}\n                variants={animations.avatar}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                className=\"flex items-center justify-center\"\n                style={{\n                    zIndex: peopleCount - i,\n                    marginLeft: i === 0 ? 0 : -24,\n                }}\n            >\n                <Image\n                    src={avatarUrls[i % avatarUrls.length]}\n                    width={96}\n                    height={96}\n                    alt={`Team member ${i + 1}`}\n                    className=\"rounded-full object-cover\"\n                />\n            </motion.div>\n        ));\n    }\n\n    return (\n        <motion.div\n            variants={animations.container}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            className=\"flex w-full flex-col items-center justify-center gap-8\"\n        >\n            <div className=\"relative h-24 w-full flex justify-center\">\n                <AnimatePresence>{renderAvatars()}</AnimatePresence>\n            </div>\n            <motion.div\n                variants={\n                    isVibrating\n                        ? {\n                              initial: { x: 0 },\n                              vibrate: {\n                                  x: [0, -5, 5, -5, 5, 0],\n                                  transition: { duration: 0.3 },\n                              },\n                          }\n                        : undefined\n                }\n                initial=\"initial\"\n                animate={isVibrating ? \"vibrate\" : \"initial\"}\n                className=\"flex items-center gap-8\"\n            >\n                <button\n                    type=\"button\"\n                    onClick={handleDecrement}\n                    className=\"h-12 w-12 rounded-full border-zinc-200 dark:border-zinc-800 \n                             bg-white dark:bg-zinc-900 \n                             hover:bg-zinc-50 dark:hover:bg-zinc-800/50 \n                             text-zinc-900 dark:text-zinc-100 cursor-pointer\"\n                >\n                    <span className=\"text-2xl font-medium\">-</span>\n                </button>\n\n                <motion.span\n                    key={peopleCount}\n                    variants={animations.container}\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    className=\"text-2xl font-medium text-zinc-900 dark:text-zinc-100\"\n                >\n                    {peopleCount}\n                </motion.span>\n\n                <button\n                    type=\"button\"\n                    onClick={handleIncrement}\n                    className=\"h-12 w-12 rounded-full border-zinc-200 dark:border-zinc-800 \n                             bg-white dark:bg-zinc-900 \n                             hover:bg-zinc-50 dark:hover:bg-zinc-800/50 \n                             text-zinc-900 dark:text-zinc-100 cursor-pointer\"\n                >\n                    <span className=\"text-2xl font-medium\">+</span>\n                </button>\n            </motion.div>\n        </motion.div>\n    );\n}\n",
      "path": "/components/ruixenui/input/input-09.tsx",
      "target": "/components/ruixenui/input-09.tsx"
    }
  ]
}