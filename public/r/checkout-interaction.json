{
  "name": "checkout-interaction",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion",
    "@number-flow/react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { Minus, Plus, ShoppingCart, X, CreditCard } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport Image from \"next/image\";\nimport { cn } from \"@/lib/utils\";\nimport NumberFlow from \"@number-flow/react\";\n\ninterface Product {\n    id: string;\n    name: string;\n    price: number;\n    category: string;\n    image: string;\n    color: string;\n}\n\ninterface CartItem extends Product {\n    quantity: number;\n}\n\ninterface CheckoutInteractionProps {\n    products?: Product[];\n}\n\nconst defaultProducts: Product[] = [\n    {\n        id: \"1\",\n        name: \"Air Max 90\",\n        price: 129.99,\n        category: \"Running\",\n        image: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/shoes-d2GWFGnVlkkUneRD3x2xDbUVHO1qMp\",\n        color: \"Black/White\",\n    },\n    {\n        id: \"2\",\n        name: \"Ultra Boost\",\n        price: 179.99,\n        category: \"Performance\",\n        image: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/shoes-d2GWFGnVlkkUneRD3x2xDbUVHO1qMp\",\n        color: \"Grey/Blue\",\n    },\n    {\n        id: \"3\",\n        name: \"Classic Trainer\",\n        price: 89.99,\n        category: \"Casual\",\n        image: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/shoes-d2GWFGnVlkkUneRD3x2xDbUVHO1qMp\",\n        color: \"White/Red\",\n    },\n];\n\nexport default function CheckoutInteraction({\n    products = defaultProducts,\n}: CheckoutInteractionProps) {\n    const [cart, setCart] = useState<CartItem[]>([]);\n\n    const addToCart = (product: Product) => {\n        setCart((currentCart) => {\n            const existingItem = currentCart.find(\n                (item) => item.id === product.id\n            );\n            if (existingItem) {\n                return currentCart.map((item) =>\n                    item.id === product.id\n                        ? { ...item, quantity: item.quantity + 1 }\n                        : item\n                );\n            }\n            return [...currentCart, { ...product, quantity: 1 }];\n        });\n    };\n\n    const removeFromCart = (productId: string) => {\n        setCart((currentCart) =>\n            currentCart.filter((item) => item.id !== productId)\n        );\n    };\n\n    const updateQuantity = (productId: string, delta: number) => {\n        setCart((currentCart) =>\n            currentCart.map((item) => {\n                if (item.id === productId) {\n                    const newQuantity = item.quantity + delta;\n                    return newQuantity > 0\n                        ? { ...item, quantity: newQuantity }\n                        : item;\n                }\n                return item;\n            })\n        );\n    };\n\n    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\n    const totalPrice = cart.reduce(\n        (sum, item) => sum + item.price * item.quantity,\n        0\n    );\n\n    return (\n        <div className=\"w-full max-w-4xl mx-auto\">\n            <div className=\"flex gap-6\">\n                {/* Products List with shoe images */}\n                <div className=\"flex-1 space-y-3\">\n                    {products.map((product) => (\n                        <motion.div\n                            key={product.id}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ duration: 0.2 }}\n                            className={cn(\n                                \"group\",\n                                \"p-4 rounded-xl\",\n                                \"bg-white dark:bg-zinc-900\",\n                                \"border border-zinc-200 dark:border-zinc-800\",\n                                \"hover:border-zinc-300 dark:hover:border-zinc-700\",\n                                \"transition-all duration-200\"\n                            )}\n                        >\n                            <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-3\">\n                                    <div\n                                        className={cn(\n                                            \"relative w-12 h-12 rounded-lg overflow-hidden\",\n                                            \"bg-zinc-100 dark:bg-zinc-800\",\n                                            \"transition-colors duration-200\",\n                                            \"group-hover:bg-zinc-200 dark:group-hover:bg-zinc-700\"\n                                        )}\n                                    >\n                                        <Image\n                                            src={product.image}\n                                            alt={product.name}\n                                            fill\n                                            className=\"object-cover\"\n                                        />\n                                    </div>\n                                    <div>\n                                        <div className=\"flex items-center gap-2\">\n                                            <h3 className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                                {product.name}\n                                            </h3>\n                                            <span className=\"px-2 py-0.5 text-xs rounded-full bg-zinc-100 dark:bg-zinc-800 text-zinc-500 dark:text-zinc-400\">\n                                                {product.category}\n                                            </span>\n                                        </div>\n                                        <div className=\"flex items-center gap-2 text-sm text-zinc-500 dark:text-zinc-400\">\n                                            <span>${product.price}</span>\n                                            <span>â€¢</span>\n                                            <span>{product.color}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={() => addToCart(product)}\n                                    className=\"gap-1.5\"\n                                >\n                                    <Plus className=\"w-3.5 h-3.5\" />\n                                    Add\n                                </Button>\n                            </div>\n                        </motion.div>\n                    ))}\n                </div>\n\n                {/* Cart with increased height */}\n                <motion.div\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    className={cn(\n                        \"w-80 flex flex-col\",\n                        \"p-4 rounded-xl\",\n                        \"bg-white dark:bg-zinc-900\",\n                        \"border border-zinc-200 dark:border-zinc-800\",\n                        \"sticky top-4\",\n                        \"max-h-[32rem]\" // Increased from 24rem to 32rem\n                    )}\n                >\n                    {/* Cart Header */}\n                    <div className=\"flex items-center gap-2 mb-3\">\n                        <ShoppingCart className=\"w-4 h-4 text-zinc-500\" />\n                        <h2 className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                            Cart ({totalItems})\n                        </h2>\n                    </div>\n\n                    {/* Cart Items */}\n                    <motion.div\n                        className={cn(\n                            \"flex-1 overflow-y-auto\",\n                            \"min-h-0\",\n                            \"-mx-4 px-4\",\n                            \"space-y-3\"\n                        )}\n                    >\n                        <AnimatePresence initial={false} mode=\"popLayout\">\n                            {cart.map((item) => (\n                                <motion.div\n                                    key={item.id}\n                                    layout\n                                    initial={{ opacity: 0, scale: 0.96 }}\n                                    animate={{ opacity: 1, scale: 1 }}\n                                    exit={{ opacity: 0, scale: 0.96 }}\n                                    transition={{\n                                        opacity: { duration: 0.2 },\n                                        layout: { duration: 0.2 },\n                                    }}\n                                    className={cn(\n                                        \"flex items-center gap-3\",\n                                        \"p-2 rounded-lg\",\n                                        \"bg-zinc-50 dark:bg-zinc-800/50\",\n                                        \"mb-3\" // Added explicit margin bottom\n                                    )}\n                                >\n                                    <div className=\"flex-1 min-w-0\">\n                                        <div className=\"flex items-center justify-between\">\n                                            <span className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100 truncate\">\n                                                {item.name}\n                                            </span>\n                                            <motion.button\n                                                whileHover={{ scale: 1.1 }}\n                                                whileTap={{ scale: 0.95 }}\n                                                onClick={() =>\n                                                    removeFromCart(item.id)\n                                                }\n                                                className=\"p-1 rounded-md hover:bg-zinc-200 dark:hover:bg-zinc-700\"\n                                            >\n                                                <X className=\"w-3 h-3 text-zinc-400\" />\n                                            </motion.button>\n                                        </div>\n                                        <div className=\"flex items-center justify-between mt-1\">\n                                            <div className=\"flex items-center gap-1\">\n                                                <motion.button\n                                                    whileHover={{ scale: 1.1 }}\n                                                    whileTap={{ scale: 0.95 }}\n                                                    onClick={() =>\n                                                        updateQuantity(\n                                                            item.id,\n                                                            -1\n                                                        )\n                                                    }\n                                                    className=\"p-1 rounded-md hover:bg-zinc-200 dark:hover:bg-zinc-700\"\n                                                >\n                                                    <Minus className=\"w-3 h-3\" />\n                                                </motion.button>\n                                                <motion.span\n                                                    layout\n                                                    className=\"text-xs text-zinc-600 dark:text-zinc-400 min-w-[16px] inline-block text-center\"\n                                                >\n                                                    {item.quantity}\n                                                </motion.span>\n                                                <motion.button\n                                                    whileHover={{ scale: 1.1 }}\n                                                    whileTap={{ scale: 0.95 }}\n                                                    onClick={() =>\n                                                        updateQuantity(\n                                                            item.id,\n                                                            1\n                                                        )\n                                                    }\n                                                    className=\"p-1 rounded-md hover:bg-zinc-200 dark:hover:bg-zinc-700\"\n                                                >\n                                                    <Plus className=\"w-3 h-3\" />\n                                                </motion.button>\n                                            </div>\n                                            <motion.span\n                                                layout\n                                                className=\"text-xs text-zinc-500 dark:text-zinc-400\"\n                                            >\n                                                $\n                                                {(\n                                                    item.price * item.quantity\n                                                ).toFixed(2)}\n                                            </motion.span>\n                                        </div>\n                                    </div>\n                                </motion.div>\n                            ))}\n                        </AnimatePresence>\n                    </motion.div>\n\n                    {/* Cart Summary */}\n                    <motion.div\n                        layout\n                        className={cn(\n                            \"pt-3 mt-3\",\n                            \"border-t border-zinc-200 dark:border-zinc-800\",\n                            \"bg-white dark:bg-zinc-900\"\n                        )}\n                    >\n                        <div className=\"flex items-center justify-between mb-3\">\n                            <span className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                Total\n                            </span>\n                            <motion.span\n                                layout\n                                className=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100 inline-block min-w-[80px] text-right\"\n                            >\n                                <NumberFlow\n                                    value={totalPrice}\n                                    willChange\n                                    format={{\n                                        style: \"currency\",\n                                        currency: \"USD\",\n                                        minimumFractionDigits: 2,\n                                        maximumFractionDigits: 2,\n                                        signDisplay: \"auto\",\n                                    }}\n                                    className=\"font-mono tabular-nums\"\n                                    transformTiming={{\n                                        duration: 400,\n                                        easing: \"ease-out\",\n                                    }}\n                                />\n                            </motion.span>\n                        </div>\n                        <Button size=\"sm\" className=\"w-full gap-2\">\n                            <CreditCard className=\"w-4 h-4\" />\n                            Checkout\n                        </Button>\n                    </motion.div>\n                </motion.div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/checkout-interaction.tsx",
      "target": "/components/ruixenui/checkout-interaction.tsx"
    }
  ]
}