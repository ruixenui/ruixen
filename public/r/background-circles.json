{
  "name": "background-circles",
  "type": "registry:component",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { motion } from \"motion/react\";\nimport clsx from \"clsx\";\nimport { useState } from \"react\";\n\ninterface BackgroundCirclesProps {\n    title?: string;\n    description?: string;\n    className?: string;\n    variant?: keyof typeof COLOR_VARIANTS;\n}\n\nconst COLOR_VARIANTS = {\n    primary: {\n        border: [\n            \"border-emerald-500/60\",\n            \"border-cyan-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-emerald-500/30\",\n    },\n    secondary: {\n        border: [\n            \"border-violet-500/60\",\n            \"border-fuchsia-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-violet-500/30\",\n    },\n    tertiary: {\n        border: [\n            \"border-orange-500/60\",\n            \"border-yellow-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-orange-500/30\",\n    },\n    quaternary: {\n        border: [\n            \"border-purple-500/60\",\n            \"border-pink-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-purple-500/30\",\n    },\n    quinary: {\n        border: [\n            \"border-red-500/60\",\n            \"border-rose-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-red-500/30\",\n    }, // red\n    senary: {\n        border: [\n            \"border-blue-500/60\",\n            \"border-sky-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-blue-500/30\",\n    }, // blue\n    septenary: {\n        border: [\n            \"border-gray-500/60\",\n            \"border-gray-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-gray-500/30\",\n    },\n    octonary: {\n        border: [\n            \"border-red-500/60\",\n            \"border-rose-400/50\",\n            \"border-slate-600/30\",\n        ],\n        gradient: \"from-red-500/30\",\n    },\n} as const;\n\nconst AnimatedGrid = () => (\n    <motion.div\n        className=\"absolute inset-0 [mask-image:radial-gradient(ellipse_at_center,transparent_30%,black)]\"\n        animate={{\n            backgroundPosition: [\"0% 0%\", \"100% 100%\"],\n        }}\n        transition={{\n            duration: 40,\n            repeat: Number.POSITIVE_INFINITY,\n            ease: \"linear\",\n        }}\n    >\n        <div className=\"h-full w-full [background-image:repeating-linear-gradient(100deg,#64748B_0%,#64748B_1px,transparent_1px,transparent_4%)] opacity-20\" />\n    </motion.div>\n);\n\nexport function BackgroundCircles({\n    title = \"Background Circles\",\n    description = \"Optional Description\",\n    className,\n    variant = \"octonary\",\n}: BackgroundCirclesProps) {\n    const variantStyles = COLOR_VARIANTS[variant];\n\n    const variants = Object.keys(\n        COLOR_VARIANTS\n    ) as (keyof typeof COLOR_VARIANTS)[];\n\n    return (\n        <div\n            className={clsx(\n                \"relative flex h-screen w-full items-center justify-center overflow-hidden\",\n                \"bg-white dark:bg-black/5\",\n                className\n            )}\n        >\n            <AnimatedGrid />\n            <motion.div className=\"absolute h-[480px] w-[480px]\">\n                {[0, 1, 2].map((i) => (\n                    <motion.div\n                        key={i}\n                        className={clsx(\n                            \"absolute inset-0 rounded-full\",\n                            \"border-2 bg-linear-to-br to-transparent\",\n                            variantStyles.border[i],\n                            variantStyles.gradient\n                        )}\n                        animate={{\n                            rotate: 360,\n                            scale: [1, 1.05 + i * 0.05, 1],\n                            opacity: [0.8, 1, 0.8],\n                        }}\n                        transition={{\n                            duration: 5,\n                            repeat: Number.POSITIVE_INFINITY,\n                            ease: \"easeInOut\",\n                        }}\n                    >\n                        <div\n                            className={clsx(\n                                \"absolute inset-0 rounded-full mix-blend-screen\",\n                                `bg-[radial-gradient(ellipse_at_center,${variantStyles.gradient.replace(\n                                    \"from-\",\n                                    \"\"\n                                )}/10%,transparent_70%)]`\n                            )}\n                        />\n                    </motion.div>\n                ))}\n            </motion.div>\n\n            <motion.div\n                className=\"relative z-10 text-center\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, ease: \"easeOut\" }}\n            >\n                <h1\n                    className={clsx(\n                        \"text-5xl font-bold tracking-tight md:text-7xl\",\n                        \"bg-linear-to-b from-slate-950 to-slate-700 dark:from-slate-100 dark:to-slate-300 bg-clip-text text-transparent\",\n                        \"drop-shadow-[0_0_32px_rgba(94,234,212,0.4)]\"\n                    )}\n                >\n                    {title}\n                </h1>\n\n                <motion.p\n                    className=\"mt-6 text-lg md:text-xl dark:text-white text-slate-950\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.2 }}\n                >\n                    {description}\n                    <span className=\"mx-3 opacity-50\">Â·</span>\n                    Ruixen UI\n                </motion.p>\n            </motion.div>\n\n            <div className=\"absolute inset-0 [mask-image:radial-gradient(90%_60%_at_50%_50%,#000_40%,transparent)]\">\n                <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_center,#0F766E/30%,transparent_70%)] blur-[120px]\" />\n                <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_center,#2DD4BF/15%,transparent)] blur-[80px]\" />\n            </div>\n        </div>\n    );\n}\n\nexport default function DemoCircles() {\n    const [currentVariant, setCurrentVariant] =\n        useState<keyof typeof COLOR_VARIANTS>(\"octonary\");\n\n    const variants = Object.keys(\n        COLOR_VARIANTS\n    ) as (keyof typeof COLOR_VARIANTS)[];\n\n    function getNextVariant() {\n        const currentIndex = variants.indexOf(currentVariant);\n        const nextVariant = variants[(currentIndex + 1) % variants.length];\n        return nextVariant;\n    }\n\n    return (\n        <>\n            <BackgroundCircles variant={currentVariant} />\n            <div className=\"absolute top-12 right-12\">\n                <button\n                    type=\"button\"\n                    className=\"bg-slate-950 dark:bg-white text-white dark:text-slate-950 px-4 py-1 rounded-md z-10 text-sm font-medium\"\n                    onClick={() => {\n                        setCurrentVariant(getNextVariant());\n                    }}\n                >\n                    Change Variant\n                </button>\n            </div>\n        </>\n    );\n}\n",
      "path": "/components/ruixenui/background-circles.tsx",
      "target": "/components/ruixenui/background-circles.tsx"
    }
  ]
}