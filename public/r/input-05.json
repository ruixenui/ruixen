{
  "name": "input-05",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Eye, EyeOff, Check, X } from \"lucide-react\";\n\nconst passwordRequirements = [\n    { label: \"8+ characters\", test: (v: string) => v.length >= 8 },\n    { label: \"Number\", test: (v: string) => /\\d/.test(v) },\n    { label: \"Lowercase\", test: (v: string) => /[a-z]/.test(v) },\n    { label: \"Uppercase\", test: (v: string) => /[A-Z]/.test(v) },\n    {\n        label: \"Special (!@#$)\",\n        test: (v: string) => /[!@#$%^&*(),.?\":{}|<>]/.test(v),\n    },\n] as const;\n\nexport default function Input_05() {\n    const [value, setValue] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n\n    const getStrength = (value: string): number => {\n        if (!value) return 0;\n        return (\n            passwordRequirements.filter((req) => req.test(value)).length * 20\n        );\n    };\n\n    const strength = getStrength(value);\n    const strengthLabel =\n        strength <= 40 ? \"Weak\" : strength <= 80 ? \"Medium\" : \"Strong\";\n\n    return (\n        <div className=\"w-full space-y-2\">\n            <label\n                htmlFor=\"input-06\"\n                className=\"block text-sm font-medium text-zinc-700 dark:text-zinc-300\"\n            >\n                Label\n            </label>\n\n            <div className=\"relative\">\n                <input\n                    id=\"input-06\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    value={value}\n                    onChange={(e) => {\n                        setValue(e.target.value);\n                    }}\n                    placeholder=\"Enter your password\"\n                    className={cn(\n                        \"w-full px-3 py-2 pr-10\",\n                        \"rounded-md border\",\n                        \"bg-white dark:bg-black/5\",\n                        \"border-zinc-200 dark:border-zinc-800\",\n                        \"focus:outline-hidden focus:ring-2\",\n                        \"focus:ring-zinc-900/20 dark:focus:ring-zinc-100/20\"\n                    )}\n                />\n                <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    aria-label={\n                        showPassword ? \"Hide password\" : \"Show password\"\n                    }\n                    className=\"absolute right-3 top-1/2 -translate-y-1/2\n                    text-zinc-400 hover:text-zinc-900 \n                    dark:text-zinc-500 dark:hover:text-zinc-100\n                    transition-colors\"\n                >\n                    {showPassword ? (\n                        <EyeOff className=\"w-4 h-4\" />\n                    ) : (\n                        <Eye className=\"w-4 h-4\" />\n                    )}\n                </button>\n            </div>\n\n            {value && (\n                <div className=\"space-y-1\">\n                    <div className=\"h-1 w-full bg-zinc-100 dark:bg-zinc-800 rounded-full\">\n                        <div\n                            className=\"h-full bg-zinc-900 dark:bg-zinc-100 transition-all duration-300\"\n                            style={{ width: `${strength}%` }}\n                        />\n                    </div>\n                    <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                        Strength:{\" \"}\n                        <span className=\"font-medium\">{strengthLabel}</span>\n                    </p>\n                </div>\n            )}\n\n            <div className=\"space-y-1.5 text-sm text-zinc-500 dark:text-zinc-400\">\n                {passwordRequirements.map(({ label, test }) => (\n                    <div key={label} className=\"flex items-center gap-2\">\n                        {test(value) ? (\n                            <Check className=\"w-3.5 h-3.5 text-zinc-900 dark:text-zinc-100\" />\n                        ) : (\n                            <X className=\"w-3.5 h-3.5\" />\n                        )}\n                        <span>{label}</span>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/input/input-05.tsx",
      "target": "/components/ruixenui/input-05.tsx"
    }
  ]
}