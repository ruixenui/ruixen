{
  "name": "ai-card-generation",
  "type": "registry:block",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "input",
    "select",
    "textarea"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Preview } from \"./preview-generation\";\nimport { ErrorGeneration } from \"./error-generation\";\nimport { FormGeneration } from \"./form-generation\";\nimport { HeaderGeneration } from \"./header-generation\";\n\ninterface CardSettings {\n    style: string;\n    backgroundColor: string;\n    lighting: string;\n    pose: string;\n    aspectRatio: string;\n}\n\nexport default function AICardGeneration() {\n    const [showForm, setShowForm] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [settings, setSettings] = useState<CardSettings>({\n        style: \"artistic\",\n        backgroundColor: \"studio\",\n        lighting: \"studio\",\n        pose: \"profile\",\n        aspectRatio: \"4:5\",\n    });\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setShowForm(false);\n        setIsLoading(true);\n        setError(null);\n\n        /**\n         * Fake Submission, update with your own\n         */\n        try {\n            await new Promise((resolve) => setTimeout(resolve, 3000));\n            setShowForm(false);\n        } catch (err) {\n            setError(\"Failed to generate video. Please try again.\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleBackToSettings = () => {\n        setShowForm(true);\n        setError(null);\n    };\n\n    return (\n        <div className=\"group relative overflow-hidden w-full max-w-sm bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-2xl transition-all duration-300 hover:shadow-[0_8px_30px_rgb(0,0,0,0.12)] dark:hover:shadow-[0_8px_30px_rgb(0,0,0,0.2)] min-h-[500px] flex flex-col justify-between gap-2 m-8\">\n            <HeaderGeneration />\n            <div className=\"flex-1 overflow-hidden flex flex-col\">\n                {error && <ErrorGeneration error={error} />}\n\n                {showForm ? (\n                    <FormGeneration\n                        onSubmit={handleSubmit}\n                        settings={settings}\n                        onSettingsChange={setSettings}\n                    />\n                ) : (\n                    <div className=\"p-4\">\n                        <Preview\n                            isLoading={isLoading}\n                            imageUrl=\"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/profile-mjss82WnWBRO86MHHGxvJ2TVZuyrDv.jpeg\"\n                        />\n\n                        {!isLoading && (\n                            <div className=\"space-y-4\">\n                                <div className=\"p-3 space-y-2 bg-zinc-50 dark:bg-zinc-800/50 rounded-xl\">\n                                    <div className=\"flex justify-between text-sm\">\n                                        <span className=\"text-zinc-500\">\n                                            Quality\n                                        </span>\n                                        <span className=\"text-zinc-900 dark:text-zinc-100\">\n                                            1080p\n                                        </span>\n                                    </div>\n                                    <div className=\"flex justify-between text-sm\">\n                                        <span className=\"text-zinc-500\">\n                                            Duration\n                                        </span>\n                                        <span className=\"text-zinc-900 dark:text-zinc-100\">\n                                            00:07\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div className=\"flex items-center justify-between gap-2\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={handleBackToSettings}\n                                        className=\"w-full h-9 flex items-center justify-center gap-2 border border-zinc-200 dark:border-zinc-700 text-zinc-900 dark:text-zinc-100 text-sm font-medium rounded-xl hover:bg-zinc-50 dark:hover:bg-zinc-800 transition-colors\"\n                                    >\n                                        Back to Settings\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"w-full h-9 flex items-center justify-center gap-2 bg-zinc-900 hover:bg-zinc-800 dark:bg-white dark:hover:bg-zinc-100 dark:text-zinc-900 text-white text-sm font-medium rounded-xl transition-colors\"\n                                    >\n                                        Download\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/blocks/ai-card-generation/ai-card-generation.tsx",
      "target": "/components/ruixenui/ai-card-generation.tsx"
    },
    {
      "type": "registry:component",
      "content": "import React from \"react\";\n\nexport const HeaderGeneration = () => {\n    return (\n        <div className=\"p-4 flex items-center justify-between border-b border-zinc-200 dark:border-zinc-800\">\n            <div className=\"flex items-center gap-3\">\n                <div>\n                    <h3 className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                        AI Portrait Generation\n                    </h3>\n                    <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                        Create stunning portraits with AI\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n",
      "path": "/components/ruixenui/blocks/ai-card-generation/header-generation.tsx",
      "target": "/components/ruixenui/header-generation.tsx"
    },
    {
      "type": "registry:component",
      "content": "import { MessageCircle, Sparkles } from \"lucide-react\";\nimport { SettingsGeneration } from \"./settings-generation\";\nimport { Input } from \"@/components/ui/input\";\n\ninterface VideoSettings {\n    style: string;\n    backgroundColor: string;\n    lighting: string;\n    pose: string;\n    aspectRatio: string;\n}\n\ninterface FormProps {\n    onSubmit: (e: React.FormEvent) => void;\n    settings: VideoSettings;\n    onSettingsChange: (settings: VideoSettings) => void;\n}\n\nexport const FormGeneration = ({\n    onSubmit,\n    settings,\n    onSettingsChange,\n}: FormProps) => {\n    return (\n        <form\n            onSubmit={onSubmit}\n            className=\"flex flex-col gap-2 flex-1 p-4 justify-between\"\n        >\n            <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                    <MessageCircle className=\"w-4 h-4 text-zinc-500\" />\n                    <span className=\"text-sm text-zinc-500\">Prompt</span>\n                </div>\n                <Input\n                    type=\"text\"\n                    size={16}\n                    defaultValue=\"Picture of a women with orange background\"\n                    placeholder=\"Describe the portrait you want to create...\"\n                    className=\"w-full bg-zinc-100 dark:bg-zinc-800 text-sm text-zinc-900 dark:text-zinc-100 placeholder:text-zinc-500 rounded-xl focus:outline-hidden focus-visible:ring-offset-0 focus-visible:ring-0 focus-visible:border-zinc-900 dark:focus-visible:border-zinc-100\"\n                />\n            </div>\n\n            <SettingsGeneration\n                settings={settings}\n                onSettingsChange={onSettingsChange}\n            />\n\n            <button\n                type=\"submit\"\n                className=\"w-full h-9 flex items-center justify-center gap-2 bg-zinc-900 hover:bg-zinc-800 dark:bg-white dark:hover:bg-zinc-100 dark:text-zinc-900 text-white text-sm font-medium rounded-xl transition-colors self-end\"\n            >\n                <Sparkles className=\"w-4 h-4\" />\n                Generate Portrait\n            </button>\n        </form>\n    );\n};\n",
      "path": "/components/ruixenui/blocks/ai-card-generation/form-generation.tsx",
      "target": "/components/ruixenui/form-generation.tsx"
    },
    {
      "type": "registry:component",
      "content": "import React from \"react\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\nimport { Palette, Image, Sun, User, Monitor } from \"lucide-react\";\n\ninterface VideoSettings {\n    style: string;\n    backgroundColor: string;\n    lighting: string;\n    pose: string;\n    aspectRatio: string;\n}\n\ninterface SettingsProps {\n    settings: VideoSettings;\n    onSettingsChange: (settings: VideoSettings) => void;\n}\n\nexport const SettingsGeneration = ({\n    settings,\n    onSettingsChange,\n}: SettingsProps) => {\n    return (\n        <div className=\"space-y-4 p-4 rounded-xl bg-zinc-50 dark:bg-zinc-800/50\">\n            <div className=\"flex items-center justify-between gap-4\">\n                <div className=\"flex items-center gap-2\">\n                    <Palette className=\"w-4 h-4 text-zinc-500\" />\n                    <span className=\"text-sm text-zinc-500\">Style</span>\n                </div>\n                <Select\n                    value={settings.style}\n                    onValueChange={(value) =>\n                        onSettingsChange({ ...settings, style: value })\n                    }\n                >\n                    <SelectTrigger className=\"w-[140px] h-8 bg-white dark:bg-zinc-900 border-zinc-200 dark:border-zinc-700\">\n                        <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"professional\">\n                            Professional\n                        </SelectItem>\n                        <SelectItem value=\"artistic\">Artistic</SelectItem>\n                        <SelectItem value=\"casual\">Casual</SelectItem>\n                        <SelectItem value=\"vintage\">Vintage</SelectItem>\n                    </SelectContent>\n                </Select>\n            </div>\n\n            <div className=\"flex items-center justify-between gap-4\">\n                <div className=\"flex items-center gap-2\">\n                    <Image className=\"w-4 h-4 text-zinc-500\" />\n                    <span className=\"text-sm text-zinc-500\">Background</span>\n                </div>\n                <Select\n                    value={settings.backgroundColor}\n                    onValueChange={(value) =>\n                        onSettingsChange({\n                            ...settings,\n                            backgroundColor: value,\n                        })\n                    }\n                >\n                    <SelectTrigger className=\"w-[140px] h-8 bg-white dark:bg-zinc-900 border-zinc-200 dark:border-zinc-700\">\n                        <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"studio\">Studio</SelectItem>\n                        <SelectItem value=\"gradient\">Gradient</SelectItem>\n                        <SelectItem value=\"solid\">Solid Color</SelectItem>\n                        <SelectItem value=\"transparent\">Transparent</SelectItem>\n                    </SelectContent>\n                </Select>\n            </div>\n\n            <div className=\"flex items-center justify-between gap-4\">\n                <div className=\"flex items-center gap-2\">\n                    <Sun className=\"w-4 h-4 text-zinc-500\" />\n                    <span className=\"text-sm text-zinc-500\">Lighting</span>\n                </div>\n                <Select\n                    value={settings.lighting}\n                    onValueChange={(value) =>\n                        onSettingsChange({ ...settings, lighting: value })\n                    }\n                >\n                    <SelectTrigger className=\"w-[140px] h-8 bg-white dark:bg-zinc-900 border-zinc-200 dark:border-zinc-700\">\n                        <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"soft\">Soft</SelectItem>\n                        <SelectItem value=\"dramatic\">Dramatic</SelectItem>\n                        <SelectItem value=\"natural\">Natural</SelectItem>\n                        <SelectItem value=\"studio\">Studio</SelectItem>\n                    </SelectContent>\n                </Select>\n            </div>\n\n            <div className=\"flex items-center justify-between gap-4\">\n                <div className=\"flex items-center gap-2\">\n                    <User className=\"w-4 h-4 text-zinc-500\" />\n                    <span className=\"text-sm text-zinc-500\">Pose</span>\n                </div>\n                <Select\n                    value={settings.pose}\n                    onValueChange={(value) =>\n                        onSettingsChange({ ...settings, pose: value })\n                    }\n                >\n                    <SelectTrigger className=\"w-[140px] h-8 bg-white dark:bg-zinc-900 border-zinc-200 dark:border-zinc-700\">\n                        <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"headshot\">Headshot</SelectItem>\n                        <SelectItem value=\"half-body\">Half Body</SelectItem>\n                        <SelectItem value=\"full-body\">Full Body</SelectItem>\n                        <SelectItem value=\"profile\">Profile</SelectItem>\n                    </SelectContent>\n                </Select>\n            </div>\n\n            <div className=\"flex items-center justify-between gap-4\">\n                <div className=\"flex items-center gap-2\">\n                    <Monitor className=\"w-4 h-4 text-zinc-500\" />\n                    <span className=\"text-sm text-zinc-500\">Quality</span>\n                </div>\n                <span className=\"text-sm text-zinc-900 dark:text-zinc-100\">\n                    720p\n                </span>\n            </div>\n        </div>\n    );\n};\n",
      "path": "/components/ruixenui/blocks/ai-card-generation/settings-generation.tsx",
      "target": "/components/ruixenui/settings-generation.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst AVAILABLE_TEXTS = [\n    \"Creating your masterpiece...\",\n    \"Finding the good colors...\",\n    \"Adding the final touches...\",\n];\nconst PROGRESS_INTERVAL_MS = 30;\nconst TEXT_CHANGE_INTERVAL_MS = 1000;\n\ninterface PreviewProps {\n    isLoading: boolean;\n    imageUrl: string;\n}\n\nexport const Preview = ({ isLoading, imageUrl }: PreviewProps) => {\n    const [currentTextIndex, setCurrentTextIndex] = useState(0);\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        if (!isLoading) {\n            setProgress(0);\n            return;\n        }\n\n        setProgress(0);\n        const progressInterval = setInterval(() => {\n            setProgress((prev) => {\n                if (prev >= 100) {\n                    clearInterval(progressInterval);\n                    return 100;\n                }\n                return prev + 1;\n            });\n        }, PROGRESS_INTERVAL_MS);\n\n        return () => clearInterval(progressInterval);\n    }, [isLoading]);\n\n    useEffect(() => {\n        if (!isLoading) {\n            return;\n        }\n\n        setCurrentTextIndex(0);\n        const textInterval = setInterval(() => {\n            setCurrentTextIndex((prev) => (prev + 1) % AVAILABLE_TEXTS.length);\n        }, TEXT_CHANGE_INTERVAL_MS);\n\n        return () => clearInterval(textInterval);\n    }, [isLoading]);\n\n    return (\n        <div className=\"aspect-video rounded-xl mb-4 flex items-center justify-center\">\n            {isLoading ? (\n                <Card className=\"w-full max-w-md border-0 shadow-none bg-transparent\">\n                    <CardContent className=\"flex flex-col items-center gap-4 p-6\">\n                        <div className=\"relative w-12 h-12\">\n                            <Loader2 className=\"w-full h-full animate-spin text-fuchsia-500\" />\n                            <div className=\"absolute inset-0 bg-gradient-to-tr from-transparent via-transparent to-fuchsia-500/10 rounded-full animate-spin-slow\" />\n                        </div>\n                        <div className=\"space-y-1 text-center\">\n                            <p className=\"text-sm font-medium text-zinc-700 dark:text-zinc-300\">\n                                {AVAILABLE_TEXTS[currentTextIndex]}\n                            </p>\n                            <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                                This usually takes 10-15 seconds\n                            </p>\n                        </div>\n                        <div className=\"w-full h-1.5 bg-zinc-200 dark:bg-zinc-700 rounded-full overflow-hidden\">\n                            <div\n                                className=\"h-full bg-fuchsia-500 transition-all duration-300 ease-linear\"\n                                style={{ width: `${progress}%` }}\n                            />\n                        </div>\n                    </CardContent>\n                </Card>\n            ) : (\n                <div className=\"flex flex-col items-center gap-2\">\n                    <Image\n                        src={imageUrl}\n                        width={400}\n                        height={400}\n                        alt=\"Generated preview\"\n                        className=\"rounded-xl object-contain\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n",
      "path": "/components/ruixenui/blocks/ai-card-generation/preview-generation.tsx",
      "target": "/components/ruixenui/preview-generation.tsx"
    },
    {
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { AlertCircle } from \"lucide-react\";\n\ninterface ErrorProps {\n    error: string;\n}\n\nexport const ErrorGeneration = ({ error }: ErrorProps) => {\n    return (\n        <div className=\"m-4 px-4 py-3 flex items-center gap-2 text-sm text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/10 rounded-xl\">\n            <AlertCircle className=\"w-4 h-4 shrink-0\" />\n            <p>{error}</p>\n        </div>\n    );\n};",
      "path": "/components/ruixenui/blocks/ai-card-generation/error-generation.tsx",
      "target": "/components/ruixenui/error-generation.tsx"
    }
  ]
}