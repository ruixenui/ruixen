{
  "name": "card-09",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "content": "import { cn } from \"@/lib/utils\";\nimport { ArrowUpRight } from \"lucide-react\";\n\ninterface Card09Props {\n    orderDetails?: {\n        itemName: string;\n        quantity: number;\n        unitPrice: number;\n    }[];\n    subtotal?: number;\n    tax?: number;\n    shipping?: number;\n    discount?: {\n        code: string;\n        amount: number;\n    };\n    total?: number;\n    currency?: string;\n    onCheckout?: () => void;\n}\n\nconst defaultOrderDetails = [\n    {\n        itemName: \"Premium Plan\",\n        quantity: 1,\n        unitPrice: 99.99,\n    },\n];\n\nexport default function Card09({\n    orderDetails = defaultOrderDetails,\n    subtotal = defaultOrderDetails.reduce(\n        (acc, item) => acc + item.unitPrice * item.quantity,\n        0\n    ),\n    tax = subtotal * 0.08, // 8% default tax\n    shipping = 0,\n    discount = {\n        code: \"WELCOME10\",\n        amount: subtotal * 0.1, // 10% discount\n    },\n    total = subtotal + tax + shipping - discount.amount,\n    currency = \"USD\",\n}: Card09Props) {\n    const formatPrice = (amount: number) => {\n        return new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: currency,\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        }).format(amount);\n    };\n\n    return (\n        <div\n            className={cn(\n                \"w-full max-w-[400px]\",\n                \"rounded-2xl\",\n                \"bg-white dark:bg-zinc-900\",\n                \"border border-zinc-200 dark:border-zinc-800\",\n                \"shadow-xs\"\n            )}\n        >\n            <div className=\"p-6 space-y-6\">\n                {/* Order Summary Header */}\n                <div className=\"flex items-center justify-between pb-4 border-b border-zinc-200 dark:border-zinc-800\">\n                    <h3 className=\"text-lg font-semibold text-zinc-900 dark:text-zinc-100\">\n                        Order Summary\n                    </h3>\n                    <span className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                        {orderDetails.reduce(\n                            (acc, item) => acc + item.quantity,\n                            0\n                        )}{\" \"}\n                        items\n                    </span>\n                </div>\n\n                {/* Order Items */}\n                <div className=\"space-y-4\">\n                    {orderDetails.map((item, index) => (\n                        <div\n                            key={index}\n                            className=\"flex justify-between items-start\"\n                        >\n                            <div className=\"space-y-1\">\n                                <p className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                    {item.itemName}\n                                </p>\n                                <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                                    Qty: {item.quantity} Ã—{\" \"}\n                                    {formatPrice(item.unitPrice)}\n                                </p>\n                            </div>\n                            <p className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                {formatPrice(item.unitPrice * item.quantity)}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n\n                {/* Price Breakdown */}\n                <div className=\"space-y-3 pt-4 border-t border-zinc-200 dark:border-zinc-800\">\n                    <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-zinc-600 dark:text-zinc-400\">\n                            Subtotal\n                        </span>\n                        <span className=\"font-medium text-zinc-900 dark:text-zinc-100\">\n                            {formatPrice(subtotal)}\n                        </span>\n                    </div>\n\n                    {shipping > 0 && (\n                        <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-zinc-600 dark:text-zinc-400\">\n                                Shipping\n                            </span>\n                            <span className=\"font-medium text-zinc-900 dark:text-zinc-100\">\n                                {formatPrice(shipping)}\n                            </span>\n                        </div>\n                    )}\n\n                    {tax > 0 && (\n                        <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-zinc-600 dark:text-zinc-400\">\n                                Tax\n                            </span>\n                            <span className=\"font-medium text-zinc-900 dark:text-zinc-100\">\n                                {formatPrice(tax)}\n                            </span>\n                        </div>\n                    )}\n\n                    {discount && (\n                        <div className=\"flex justify-between text-sm text-green-600 dark:text-green-400\">\n                            <span>Discount ({discount.code})</span>\n                            <span>-{formatPrice(discount.amount)}</span>\n                        </div>\n                    )}\n                </div>\n\n                {/* Total */}\n                <div className=\"flex justify-between items-center pt-4 border-t border-zinc-200 dark:border-zinc-800\">\n                    <span className=\"text-base font-semibold text-zinc-900 dark:text-zinc-100\">\n                        Total\n                    </span>\n                    <span className=\"text-xl font-bold text-zinc-900 dark:text-zinc-100\">\n                        {formatPrice(total)}\n                    </span>\n                </div>\n\n                {/* Checkout Button */}\n                <button\n                    type=\"button\"\n                    className={cn(\n                        \"w-full px-4 py-3 rounded-xl text-sm font-medium\",\n                        \"bg-indigo-600 text-white\",\n                        \"hover:bg-indigo-700\",\n                        \"transition-colors duration-300\",\n                        \"flex items-center justify-center gap-2\"\n                    )}\n                >\n                    Proceed to Checkout\n                    <ArrowUpRight className=\"w-4 h-4\" />\n                </button>\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/ruixenui/card/card-09.tsx",
      "target": "/components/ruixenui/card-09.tsx"
    }
  ]
}